-- Crear secuencia para IDs autoincrementables
CREATE SEQUENCE PRODUCTO_SEQ START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

-- Crear tabla PRODUCTO
CREATE TABLE PRODUCTO (
    ID_PRODUCTO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    PRECIO NUMBER(10,2) NOT NULL CHECK (PRECIO >= 0),
    MARCA VARCHAR2(100),
    DESCRIPCION VARCHAR2(255),
    FECHA_CREACION DATE NOT NULL
);
//SQL
CREATE OR REPLACE PROCEDURE CREAR_PRODUCTO (
    P_NOMBRE IN VARCHAR2,
    P_PRECIO IN NUMBER,
    P_MARCA IN VARCHAR2,
    P_DESCRIPCION IN VARCHAR2,
    P_FECHA_CREACION IN DATE
) AS
BEGIN
    INSERT INTO PRODUCTO (
        ID_PRODUCTO, NOMBRE, PRECIO, MARCA, DESCRIPCION, FECHA_CREACION
    ) VALUES (
        PRODUCTO_SEQ.NEXTVAL, P_NOMBRE, P_PRECIO, P_MARCA, P_DESCRIPCION, P_FECHA_CREACION
    );
    COMMIT;
END;
/

//frameworks externos
CREATE OR REPLACE PROCEDURE LISTAR_PRODUCTOS IS
BEGIN
    FOR R IN (SELECT * FROM PRODUCTO) LOOP
        DBMS_OUTPUT.PUT_LINE(
            'ID: ' || R.ID_PRODUCTO || ', Nombre: ' || R.NOMBRE || ', Precio: ' || R.PRECIO
        );
    END LOOP;
END;
/

CREATE OR REPLACE PROCEDURE ACTUALIZAR_PRODUCTO (
    P_ID_PRODUCTO IN NUMBER,
    P_NOMBRE IN VARCHAR2,
    P_PRECIO IN NUMBER,
    P_MARCA IN VARCHAR2,
    P_DESCRIPCION IN VARCHAR2,
    P_FECHA_CREACION IN DATE
) AS
    V_EXISTE NUMBER;
BEGIN
    SELECT COUNT(*) INTO V_EXISTE FROM PRODUCTO WHERE ID_PRODUCTO = P_ID_PRODUCTO;

    IF V_EXISTE = 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'Producto no encontrado');
    END IF;

    UPDATE PRODUCTO
    SET NOMBRE = P_NOMBRE,
        PRECIO = P_PRECIO,
        MARCA = P_MARCA,
        DESCRIPCION = P_DESCRIPCION,
        FECHA_CREACION = P_FECHA_CREACION
    WHERE ID_PRODUCTO = P_ID_PRODUCTO;

    COMMIT;
END;
/

//Update
CREATE OR REPLACE PROCEDURE ACTUALIZAR_PRODUCTO (
    P_ID_PRODUCTO IN NUMBER,
    P_NOMBRE IN VARCHAR2,
    P_PRECIO IN NUMBER,
    P_MARCA IN VARCHAR2,
    P_DESCRIPCION IN VARCHAR2,
    P_FECHA_CREACION IN DATE
) AS
    V_EXISTE NUMBER;
BEGIN
    SELECT COUNT(*) INTO V_EXISTE FROM PRODUCTO WHERE ID_PRODUCTO = P_ID_PRODUCTO;

    IF V_EXISTE = 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'Producto no encontrado');
    END IF;

    UPDATE PRODUCTO
    SET NOMBRE = P_NOMBRE,
        PRECIO = P_PRECIO,
        MARCA = P_MARCA,
        DESCRIPCION = P_DESCRIPCION,
        FECHA_CREACION = P_FECHA_CREACION
    WHERE ID_PRODUCTO = P_ID_PRODUCTO;

    COMMIT;
END;
/

//Delete
CREATE OR REPLACE PROCEDURE ELIMINAR_PRODUCTO (
    P_ID_PRODUCTO IN NUMBER
) AS
    V_EXISTE NUMBER;
BEGIN
    SELECT COUNT(*) INTO V_EXISTE FROM PRODUCTO WHERE ID_PRODUCTO = P_ID_PRODUCTO;

    IF V_EXISTE = 0 THEN
        RAISE_APPLICATION_ERROR(-20002, 'Producto no encontrado');
    END IF;

    DELETE FROM PRODUCTO WHERE ID_PRODUCTO = P_ID_PRODUCTO;
    COMMIT;
END;
/

//
-- Crear producto
CALL CREAR_PRODUCTO('Laptop HP', 9500.00, 'HP', 'Laptop de 16GB RAM', SYSDATE);

-- Leer productos
EXEC LISTAR_PRODUCTOS;

-- Actualizar producto con ID 1
CALL ACTUALIZAR_PRODUCTO(1, 'Laptop HP Pro', 10500.00, 'HP', 'Actualizada', SYSDATE);

-- Eliminar producto con ID 1
CALL ELIMINAR_PRODUCTO(1);



